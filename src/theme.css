html {
    height: 100%;

    /* TODO Experiment with different viewport units */
}

/*
min-height: 100% not needed on body due to oddity when styling html

https://stackoverflow.com/a/76849201 answer mentions 

“
For historical reasons (connected with the pre-CSS way of setting the background colour for the document with the bgcolor attribute on the BODY element), 
the CSS spec requires that when the following conditions are met:
- You are styling an HTML document
- You apply a background colour to the BODY element
- You don't apply a background colour to the HTML element
… then the background colour of the BODY element is moved to the HTML element.
“

*/
body {
    background-color: var(--color-primary-100);
    background-image: url("./images/map.png");
    background-position: center 15vh;
    background-repeat: repeat-x;
    font-family: var(--font-family);
}

a {
    color: var(--color-accent-600);

    /* TODO Proper mobile link styling? */
    &:hover,
    &:active {
        color: var(--color-accent-300);
    }
}

ul {
    li {
        &::marker {
            content: "*";
            font-size: 1.15em;
            font-weight: bold;
        }

        padding-inline-start: 1ch;

        /* vertically align list item content with asterisk; no idea
        how well this will work out in practice. feels... not great, but maybe fine? */
        > * {
            position: relative;
            top: -0.2em;
        }
    }
}

.AccentButton {
    background-color: var(--color-accent-100);
    border: 4px solid var(--color-accent-600);
    border-style: inset;
    border-radius: 8px;
    color: var(--color-accent-900);
    font-size: var(--font-size-xl);
    font-weight: bold;
    padding: calc(var(--spacing-threequarter) * 1rem / var(--spacing-base))
        calc(var(--spacing-onedotfive) * 1rem / var(--spacing-base));
    text-decoration: none;

    &:hover,
    &:active {
        background-color: var(--color-accent-900);
        border-style: outset;
        color: var(--color-accent-100);
    }
}

.regex {
    color: var(--color-accent-600);
    font-size: var(--font-size-4xl);
    font-weight: bold;

    /* TODO Does letter spacing need to increase now that letters are smaller, less distinct? */
    letter-spacing: 0.05em;
    text-decoration: none;

    /* Wanted disproportionate "letter-spacing" between the selector and flags of the regex */
    span {
        display: inline-block;
        width: 0.25em;
    }

    &:is(a) {
        &:active,
        &:hover {
            box-shadow: 0 0.05em 0 var(--color-accent-600);
            color: var(--color-accent-600);
        }

        @media (min-width: 40rem) {
            font-size: var(--font-size-5xl);
        }
    }
}

nav {
    align-items: center;
    display: flex;
    flex-direction: column;
    gap: calc((var(--spacing-two) * 1rem) / var(--spacing-base));

    @media (min-width: 40rem) {
        align-items: baseline;
        flex-direction: row;
        gap: calc((var(--spacing-four) * 1rem) / var(--spacing-base));
    }
}

.nav-button-group {
    display: flex;
    flex-direction: row;
    gap: calc((var(--spacing-three) * 1rem) / var(--spacing-base));

    > .current-page {
        position: relative;

        &::before {
            color: var(--color-primary-500);
            content: "*";
            font-size: var(--font-size-4xl);
            position: absolute;
            left: calc(50% - 0.25ch);
            top: calc(
                var(--spacing-threequarter) * -1rem / var(--spacing-base)
            );
        }
    }
}

.subpage-layout {
    padding: calc(var(--spacing-two) * 1rem / var(--spacing-base));

    > header {
        max-width: 40rem;
        margin-bottom: calc(var(--spacing-four) * 1rem / var(--spacing-base));

        @media (min-width: 80rem) {
            max-width: calc(var(--spacing-forty) * 1rem / var(--spacing-base));
        }
    }
}

.block {
    border-radius: calc(
        var(--spacing-half) * 1px
    ); /* TODO lift border radii settings to var? */

    &:is(.metal) {
        color: var(--color-gray-200);
        background-color: var(--color-gray-900);
    }

    > .block-header {
        padding: calc(var(--spacing-three) * 1rem / var(--spacing-base))
            calc(var(--spacing-two) * 1rem / var(--spacing-base));
        padding-bottom: calc((var(--spacing-one) * 1rem) / var(--spacing-base));
    }

    /* body elements might be nested; see about for more complicated example (2 column block) */
    .block-body {
        /*
            Meant to cap line lengths at readable number of characters; note, though, that space occupied by text is 35em - x-padding
            Ended up achieving good line length and helped keep blocks sized consistently, but a bit mismatched with intention, should
            figure out how to do better here
        */
        max-width: 35em;
        font-size: var(--font-size-lg);
        padding: calc(var(--spacing-two) * 1rem / var(--spacing-base));

        > * + * {
            margin-top: 1em;
        }
    }
}

.post-title {
    color: var(--color-primary-900);
    font-size: var(--font-size-7xl);
    font-style: italic;
    margin-top: calc(var(--spacing-four) * 1rem / var(--spacing-base));
    text-align: center;
    text-transform: uppercase;
}
