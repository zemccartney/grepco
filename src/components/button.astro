---
import type { HTMLTag, Polymorphic } from "astro/types";
import type { ClassValue } from "clsx";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag; class?: ClassValue }>;

const { as = "button", class: className, ...rest } = Astro.props;

const Tag = as;
---

<style>
    .GC_Button {
        background-color: var(--color-accent-100);
        border: 4px solid var(--color-accent-600);
        border-style: inset;
        border-radius: 8px;
        color: var(--color-accent-900);
        font-size: var(--font-size-xl);
        font-weight: bold;
        padding: var(--spacing-threequarter-rem) var(--spacing-onedotfive-rem);
        text-decoration: none;

        &:hover,
        &:active {
            background-color: var(--color-accent-900);
            border-style: outset;
            color: var(--color-accent-100);
        }
    }
</style>

<Tag
    class:list={["GC_Button", className]}
    {...rest}
>
    <slot />
</Tag>
